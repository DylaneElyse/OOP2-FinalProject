@page "/Users"
@inject Data.LibraryService LibraryDatabase
@using OOP2_FinalProject.Data

<h1>Users</h1>

<div class="flex-user">
    <div>
        @if (!string.IsNullOrEmpty(UserErrorMessage))
        {
            <p>@UserErrorMessage</p>
        }
    </div>

    <div>
        <table>
            <thead>
                <tr>
                    <th>Library Card Number</th>
                    <th>First Name</th>
                    <th>Last Name</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @if (users != null)
                {
                    foreach (var user in users)
                    {
                        <tr>
                            <td>@user.LibNum</td>
                            <td>@user.FName</td>
                            <td>@user.LName</td>
                            <td>@user.Email</td>
                            <td>
                                <a class="pseudo-btn" href="/UserDB/@user.IdNum">Edit User</a>
                                <button class="pseudo-btn" @onclick="()=>DeleteUser(user)">Delete User</button>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

    <div><a class="add" href="/UserDB">Add New User</a></div>
</div>

@code {
    private List<User> users;
    private string UserErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            users = await LibraryDatabase.GetUsersListAsync();
        }
        catch (Exception e)
        {
            UserErrorMessage = e.Message;
        }
    }

    private async Task DeleteUser(User user)
    {
        try
        {
            await LibraryDatabase.DeleteUserAsync(user);
            users = await LibraryDatabase.GetUsersListAsync();
        }
        catch (Exception e)
        {
            UserErrorMessage = e.Message;
        }
    }

}
